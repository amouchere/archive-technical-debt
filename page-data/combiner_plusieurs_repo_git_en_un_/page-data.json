{"componentChunkName":"component---src-templates-blog-post-js","path":"/combiner_plusieurs_repo_git_en_un_/","result":{"data":{"site":{"siteMetadata":{"title":"Technical Debt"}},"markdownRemark":{"id":"f10412bb-4896-5a80-97d1-c3e456d58b55","excerpt":"But : Pouvoir merger plusieurs repo GIT en un seul sans perdre l’historique d’aucun repo. source","html":"<p>But : Pouvoir merger plusieurs repo GIT en un seul sans perdre l’historique d’aucun repo.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Clone both repositories into the same directory and go into repo A:\n\ngit clone A\ngit clone B\ncd A\n\n# Add a remote called B that points to the repo B  (do git remote -v to view your remotes),\n# and fetch copies of all B’s branches:\n\ngit remote add B ../B\ngit fetch B\n\n# To view all B’s branches that we’ve just fetched,\n# do git branch -a. You should seeB/master in the list.\n# Now, still in repo A, create a branch called B-master in repo A that tracks B/master.\n\ngit branch B-master B/master\n\n# If you’re not already in the master branch, check it out, then merge B-master into A’s master.\n\ngit merge B-master\n\n# Assuming you have no merge conflicts, you’re done!</code></pre></div>\n<p><a href=\"http://blog.caplin.com/2013/09/18/merging-two-git-repositories/\">source</a></p>","frontmatter":{"title":"Combiner plusieurs repo Git en un","date":"December 10, 2015","description":null}}},"pageContext":{"slug":"/combiner_plusieurs_repo_git_en_un_/","previous":{"fields":{"slug":"/lancer_une_appli_au_dmarrage_du_syno/"},"frontmatter":{"title":"Lancer une appli au démarrage du Syno"}},"next":{"fields":{"slug":"/outils_sympas_sous_windows/"},"frontmatter":{"title":"Outils sympas sous Windows"}}}},"staticQueryHashes":["2841359383","916993862"]}