{"componentChunkName":"component---src-templates-blog-post-js","path":"/CXF-OneWay-method/","result":{"data":{"site":{"siteMetadata":{"title":"Technical Debt"}},"markdownRemark":{"id":"dfb1cf3a-5839-58f1-9a43-e773b7fb7c33","excerpt":"Un consumer SOAP par défaut fonctionne de manière synchrone. Pour consommer une API de façon asynchrone, l’interceptor qui gère la réponse doit être configurée…","html":"<p>Un consumer SOAP par défaut fonctionne de manière synchrone.</p>\n<p>Pour consommer une API de façon asynchrone, l’interceptor qui gère la réponse doit être configurée.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CxfClientConfig</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token annotation punctuation\">@Value</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"${endpoint.url}\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> endpointUrl<span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Bean</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">HwfServerPortType</span> <span class=\"token function\">asyncClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">JaxWsProxyFactoryBean</span> factory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">JaxWsProxyFactoryBean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span>endpointUrl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factory<span class=\"token punctuation\">.</span><span class=\"token function\">setServiceClass</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HwfServerPortType</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n        <span class=\"token comment\">//Logging interceptor IN/OUT</span>\n        factory<span class=\"token punctuation\">.</span><span class=\"token function\">getInInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LoggingInInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        factory<span class=\"token punctuation\">.</span><span class=\"token function\">getOutInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LoggingOutInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        factory<span class=\"token punctuation\">.</span><span class=\"token function\">getOutInterceptors</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AsyncInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HwfServerPortType</span><span class=\"token punctuation\">)</span> factory<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * For OneWay SOAP method (no return is expected)\n     */</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AsyncInterceptor</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractSoapInterceptor</span> <span class=\"token punctuation\">{</span>\n\n        <span class=\"token class-name\">AsyncInterceptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Phase</span><span class=\"token punctuation\">.</span>SETUP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token annotation punctuation\">@Override</span>\n        <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">SoapMessage</span> message<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Fault</span> <span class=\"token punctuation\">{</span>\n            message<span class=\"token punctuation\">.</span><span class=\"token function\">getExchange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setSynchronous</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Cet AsyncInterceptor permet également de traiter les méthodes SOAP n’attendant aucune réponse. (@OneWay) évitant ainsi des erreurs</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">java.net.SocketException: Unexpected end of file from server\n\n...\n\nCaused by: java.net.SocketException: Unexpected end of file from server</code></pre></div>","frontmatter":{"title":"CXF OneWay method","date":"June 26, 2018","description":null}}},"pageContext":{"slug":"/CXF-OneWay-method/","previous":{"fields":{"slug":"/Log-Request-Filter-for-Spring-application/"},"frontmatter":{"title":"Log Request Filter for Spring application"}},"next":{"fields":{"slug":"/Crontab-basics/"},"frontmatter":{"title":"Crontab basics"}}}},"staticQueryHashes":["2841359383","916993862"]}