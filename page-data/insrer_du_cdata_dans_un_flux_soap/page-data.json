{"componentChunkName":"component---src-templates-blog-post-js","path":"/insrer_du_cdata_dans_un_flux_soap/","result":{"data":{"site":{"siteMetadata":{"title":"Technical Debt"}},"markdownRemark":{"id":"af082bbb-12a4-576d-a893-7e75507441da","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">handleMessage</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">Message</span> message<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        message<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>“disable<span class=\"token punctuation\">.</span>outputstream<span class=\"token punctuation\">.</span>optimization”<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Boolean</span><span class=\"token punctuation\">.</span>TRUE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">XMLStreamWriter</span> writer <span class=\"token operator\">=</span> <span class=\"token class-name\">StaxUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">createXMLStreamWriter</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">OutputStream</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        message<span class=\"token punctuation\">.</span><span class=\"token function\">setContent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XMLStreamWriter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">CDataXMLStreamWriter</span><span class=\"token punctuation\">(</span>writer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">com<span class=\"token punctuation\">.</span>amouchere<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span>soap<span class=\"token punctuation\">.</span>interceptor</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">XMLStreamException</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">javax<span class=\"token punctuation\">.</span>xml<span class=\"token punctuation\">.</span>stream<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">XMLStreamWriter</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>cxf<span class=\"token punctuation\">.</span>staxutils<span class=\"token punctuation\">.</span></span><span class=\"token class-name\">DelegatingXMLStreamWriter</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/*\n  This StreamWriter is used to put CDATA tag into xml when the xml node is “myTag”\n */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">CDataXMLStreamWriter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DelegatingXMLStreamWriter</span> <span class=\"token punctuation\">{</span>\n\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">String</span> TAG_NAME <span class=\"token operator\">=</span> “myTag”<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> currentElementName<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">CDataXMLStreamWriter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">XMLStreamWriter</span> del<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>del<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token operator\">/</span>\n\n      <span class=\"token annotation punctuation\">@return</span> <span class=\"token boolean\">true</span> <span class=\"token keyword\">if</span> the current element is the right one <span class=\"token punctuation\">(</span>CDATA<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n     <span class=\"token operator\">*</span><span class=\"token operator\">/</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">checkIfCDATAneededForCurrentElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>TAG_NAME<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElementName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeCharacters</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> text<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">XMLStreamException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> useCData <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkIfCDATAneededForCurrentElement</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>useCData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeCData</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeCharacters</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">writeStartElement</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> prefix<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> local<span class=\"token punctuation\">,</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> uri<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">XMLStreamException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>currentElementName <span class=\"token operator\">=</span> local<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">writeStartElement</span><span class=\"token punctuation\">(</span>prefix<span class=\"token punctuation\">,</span> local<span class=\"token punctuation\">,</span> uri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Insérer du CDATA dans un flux SOAP","date":"April 03, 2015","description":null}}},"pageContext":{"slug":"/insrer_du_cdata_dans_un_flux_soap/","previous":{"fields":{"slug":"/soap_interceptor/"},"frontmatter":{"title":"Utiliser un intercepteur SOAP"}},"next":{"fields":{"slug":"/ouverture_de_truecrypt__veracrypt/"},"frontmatter":{"title":"Ouverture de TrueCrypt / VeraCrypt"}}}},"staticQueryHashes":["2841359383","916993862"]}