{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","tags","key","className","itemScope","itemType","to","itemProp","style","display","flexFlow","justifyContent","paddingBottom","date","tag","variant","onClick","event","navigate","toLowerCase","fontSize","color","marginLeft","cursor","whiteSpace","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,0HA6EeA,UApEG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,mBACX,kBAAC,IAAD,MACCC,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KAC9CC,EAAOJ,EAAKC,YAAYG,KAC9B,OACI,6BACIC,IAAKL,EAAKE,OAAOC,KACjBG,UAAU,iBACVC,WAAS,EACTC,SAAS,6BACT,gCACI,4BACI,kBAAC,OAAD,CAAMC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACjC,0BAAMA,SAAS,YAAYf,KAInC,yBAAKgB,MAAO,CACRC,QAAS,OACTC,SAAU,WACVC,eAAgB,OAChBC,cAAe,OAEf,+BAAQf,EAAKC,YAAYe,MACxBZ,EAAKL,KAAI,SAACkB,GACP,MAAO,CACL,yBACEZ,IAAKY,EACLC,QAAQ,WACRC,QAAS,SAAAC,GAAWC,mBAAS,SAASJ,EAAIK,gBAC1CX,MAAO,CACLY,SAAU,GACVC,MAAO,OACPC,WAAY,OACZC,OAAQ,UACRC,WAAY,WAGd,2BACGV,UAQnB,iCACE,uBACEW,wBAAyB,CACvBC,OAAQ7B,EAAKC,YAAY6B,aAAe9B,EAAK+B,kBAa5D,IAAMC,EAAS","file":"component---src-pages-index-js-2b3f6f3e429ac8176ed2.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nimport { navigate } from \"gatsby\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"Technical Debt\" />\r\n      <Bio />\r\n      {posts.map(({ node }) => {\r\n        const title = node.frontmatter.title || node.fields.slug\r\n        const tags = node.frontmatter.tags\r\n        return (\r\n            <article \r\n                key={node.fields.slug}\r\n                className=\"post-list-item\"\r\n                itemScope\r\n                itemType=\"http://schema.org/Article\">\r\n                <header>\r\n                    <h2>\r\n                        <Link to={node.fields.slug} itemProp=\"url\">\r\n                            <span itemProp=\"headline\">{title}</span>\r\n                        </Link>\r\n                    </h2>\r\n                     \r\n                    <div style={{\r\n                        display: 'flex',\r\n                        flexFlow: 'row wrap',\r\n                        justifyContent: 'left',\r\n                        paddingBottom: '2%',\r\n                    }}>\r\n                        <small>{node.frontmatter.date}</small>\r\n                        {tags.map((tag) => {\r\n                            return [\r\n                              <div\r\n                                key={tag}\r\n                                variant=\"outlined\"\r\n                                onClick={event => { navigate(`/tags/${tag.toLowerCase()}`) }}\r\n                                style={{\r\n                                  fontSize: 12,\r\n                                  color: 'grey',\r\n                                  marginLeft: '2.5%',\r\n                                  cursor: 'pointer',\r\n                                  whiteSpace: 'nowrap'\r\n                                }}\r\n                              >\r\n                                <p>\r\n                                  {tag}\r\n                                </p>\r\n                              </div>\r\n                            ]\r\n                        })}\r\n                    </div>\r\n                </header>\r\n               \r\n                <section>\r\n                  <p\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: node.frontmatter.description || node.excerpt,\r\n                    }}\r\n                  />\r\n                </section>\r\n            </article>\r\n        )\r\n      })}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\nquery {\r\n  site {\r\n    siteMetadata {\r\n      title\r\n    }\r\n  }\r\n  allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n    edges {\r\n      node {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          tags\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n`"],"sourceRoot":""}